<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
        <groupId>info.ejava.examples.jpa</groupId>
        <artifactId>jpa-relation</artifactId>
        <version>4.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>jpa-inheritance-example</artifactId>

  <name>JPA::Relation::Inheritance Examples</name>
  <description>
    This module provides a examples of using the Java Persistence API
    to map object inheritance to the database.
  </description>
  <dependencies>
    <!-- core dependencies -->
    <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.1-api</artifactId>
        <scope>provided</scope>
    </dependency>

    <!-- core project testing dependencies -->
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <scope>test</scope>
    </dependency>        
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <scope>test</scope>
    </dependency>    
  </dependencies>

  <build>
     <!--tell the resource plugin to perform filtering on resources 
         to fill in JDBC URL, etc. -->
    <resources>
        <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
        </resource>
    </resources>
    <testResources>
        <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
        </testResource>
    </testResources>

    <plugins>
          <!-- set test JVM root classpath so persistence framework
              can locate entities during classpath scan -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
                <argLine>${surefire.argLine}</argLine>
            </configuration>
        </plugin>

    </plugins>      
  </build>

    <profiles>
        <profile> <!-- defines our default persistence provider -->
            <id>hibernate</id>
            <activation>
                <property> <!-- use this property to name alt persistence provider -->
                    <name>!jpa</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-entitymanager</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
                        
            <build>
                <plugins>
                    <!-- generates a DDL file for persistence unit
                        see effective-pom for full configuration -->
                    <plugin>
                        <artifactId>hibernate3-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <configuration>
                            <hibernatetool destdir="target/classes/ddl">
                                <classpath>
                                    <path location="${project.build.directory}/test-classes" />
                                </classpath>
                                <jpaconfiguration persistenceunit="ormInheritance" propertyfile="${basedir}/target/test-classes/hibernate.properties" />
                            </hibernatetool>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
