<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>info.ejava.examples.async</groupId>
        <artifactId>asyncMarket</artifactId>
        <version>4.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>asyncMarketEAR</artifactId>
    <packaging>ear</packaging>

    <name>Async::Async Market::EAR</name>
    <description>
        This project provides a deployment EAR for the Java EE components
        associated with the Async Market project.
    </description>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>asyncMarketEJB</artifactId>
            <version>${project.version}</version>
            <type>ejb</type>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>asyncMarketWAR</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <scope>compile</scope>
        </dependency>

        <!-- used by WAR - put in global app classpath -->
        <dependency>
            <groupId>info.ejava.examples.common</groupId>
            <artifactId>ejava-util</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>    
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <configuration>
                    <!-- set application-name to prevent JNDI from appending version -->
                    <applicationName>${project.artifactId}</applicationName>
                    <!-- define the directory where all global modules will be loaded from -->
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    
                    <modules>
                        <webModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>asyncMarketWAR</artifactId>
                            <contextRoot>asyncMarket</contextRoot>
                        </webModule>
                        <!-- set jar name to prevent JNDI from appending version -->
                        <ejbModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>asyncMarketEJB</artifactId>
                            <bundleFileName>asyncMarketEJB.jar</bundleFileName>
                        </ejbModule>
                    </modules>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
    <!-- this profiles allow the EAR to be undeployed before it is deleted
        during the clean target. This behavior requires the EAR to be
        present, so it cannot be part of the default behavior. It is
        only activated when -Dundeploy or -Pundeploy is present so that
        normal cleans do not fail.  -->
        <profile>
            <id>undeploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>undeploy-ear</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>                    
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
