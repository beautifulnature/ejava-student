<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>info.ejava.examples.ejb</groupId>
        <artifactId>webejb</artifactId>
        <version>5.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>jaxrsInventoryWAR</artifactId>
    <packaging>war</packaging>

    <name>EJB::Web-oriented EJB::JAX-RS Inventory WAR</name>
    <description>
        This project provides a demonstration of flexible EJB
        deployment of EJBs within a WAR and the exposure of 
        those EJBs through the web as resources using JAX-RS
        and JAXB.
    </description>

    <dependencies>
        <!-- integrate self-contained external EJB module -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>webejbCustomerEJB</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- APIs used but provided by server -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>javax.transaction-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>javax.ejb-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>   
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- defines JSON-B entry point e.g., Jsonb and @Annotations -->
        <dependency>
            <groupId>javax.json.bind</groupId>
            <artifactId>javax.json.bind-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.5</version>
        </dependency>
              
        <!-- test/JAX-RS provider dependencies -->    
            
        <!-- JAX-RS provider -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>    
        <!-- XML impl for RESTEasy JAX-RS provider -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxb-provider</artifactId>
            <scope>provided</scope> <!-- added to main scope for resteasy annotations -->
        </dependency>
        <!-- JSON wiring for RESTEasy JAX-RS provider (javaee7)-->
        <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-jackson2-provider</artifactId>
            <scope>test</scope>
       </dependency>
       <!-- JSON-B JSON wiring for RESTEasy JAX-RS provider (javaee8; highest JSON priority) 
       -->
       <dependency>
          <groupId>org.jboss.resteasy</groupId>
          <artifactId>resteasy-json-binding-provider</artifactId>
            <scope>test</scope>
       </dependency>

        <!-- brought in by resteasy-json-binding-provider -->
        <!-- JSON-B - reference implementation for JSON-B (e.g., JsonBindingProvider) 
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <scope>test</scope>
        </dependency>              
         -->
        <!-- JSON provider for JSON-B reference implementation - needed by yasson
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <scope>test</scope>
        </dependency>
        -->
      
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- Could use this to define the many 
             javax classes individually enumerated above 
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
    </dependencies>

    <build>
        <finalName>jaxrsInventoryWAR</finalName>

        <!-- filter test/resource files for profile-specific valies -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <!-- deploy this artifact to server -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>
            
            <!-- run IT tests within this module -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <cargo.startstop>${cargo-startstop}</cargo.startstop>
                    </systemProperties>
                </configuration>
            </plugin>

            <!-- create an archive for external clients to use -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>client</classifier>
                            <includes>
                                <include>**/bo/*</include>
                                <include>**/rs/*Resource.class</include>
                                <include>**/client/**/*</include>
                                <include>**/rmi/*Remote.class</include>
                                <include>**/jaxrs/*Utils.class</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
