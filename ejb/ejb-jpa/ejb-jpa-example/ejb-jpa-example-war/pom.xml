<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>info.ejava.examples.ejb.jpa</groupId>
        <artifactId>ejb-jpa-example</artifactId>
        <version>5.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>ejb-jpa-example-war</artifactId>
    <packaging>war</packaging>

    <name>EJB::JPA Example::WAR</name>
    <description>
        This project provides an example EJB using JPA on the server-side.
    </description>

    <dependencies>
        <!-- core implementation dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>javax.ejb-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>        

        <!-- application-specific dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ejb-jpa-example-blimpl</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- provides RMI dependencies for JBoss -->
        <dependency>
            <groupId>info.ejava.examples.common</groupId>
            <artifactId>jboss-rmi-client</artifactId>
            <type>pom</type>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
       <!-- used if hibernate entities re-used as DTOs -->
       <dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-core</artifactId>
           <scope>test</scope>
       </dependency>
        
        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>    
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <!-- filter test/resource files for profile-specific values -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>META-INF/persistence.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>META-INF/persistence.xml</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <!-- build client library for what is hosted here -->        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>client</classifier>
                            <includes>
                                <include>**/*Remote.class</include>
                                <include>**/dto/*.class</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        
            <!-- deploy EJB to server -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>

            <!-- run IT tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>      
    </build>
</project>
