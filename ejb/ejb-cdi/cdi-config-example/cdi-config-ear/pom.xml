<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>info.ejava.examples.ejb</groupId>
        <artifactId>cdi-config-example</artifactId>
        <version>5.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>cdi-config-ear</artifactId>
    <packaging>ear</packaging>

    <name>EJB::CDI::CDI Config Example::EAR</name>
    <description>
        This project provides a deployment EAR for the Java EE components
        required to provide example usages of CDI configuration within the EJB tier.
    </description>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>cdi-config-ejb</artifactId>
            <version>${project.version}</version>
            <type>ejb</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <configuration>
                    <!-- set application-name to prevent JNDI from appending version -->
                    <applicationName>${project.artifactId}</applicationName>
                    <!-- define the directory where all global modules will be loaded from -->
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    
                    <modules>
                        <!-- set jar name to prevent JNDI from appending version -->
                        <ejbModule>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>cdi-config-ejb</artifactId>
                            <bundleFileName>cdi-config-ejb.jar</bundleFileName>
                        </ejbModule>
                    </modules>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- this profiles allow the EAR to be undeployed before it is deleted
            during the clean target. This behavior requires the EAR to be
            present, so it cannot be part of the default behavior. It is
            only activated when -Dundeploy or -Pundeploy is present so that
            normal cleans do not fail.  -->
        <profile>
            <id>undeploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>undeploy-ear</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>                    
                </plugins>
            </build>
        </profile>

    </profiles>
</project>
