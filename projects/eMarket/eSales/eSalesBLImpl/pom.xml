<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>info.ejava.examples.projects.eSales</groupId>
        <artifactId>eSales</artifactId>
        <version>4.1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>eSalesBLImpl</artifactId>

    <name>Projects::eMarket::eSales::BLImpl</name>
    <description>
        This project provides a sparse example of how to setup an ingest and 
        command line clients for the class project.
    </description>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>eSalesBO</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>eSalesDAO</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- THIS IS A REAL DEPENDENCY THAT YOU WOULD COPY INTO YOUR POM.XML 
            it is marked as scope=provided so that you don't bring this 
            dependency forward in you code since it is not needed after
            the ingest.
        -->
        <dependency>
            <groupId>info.ejava.examples.projects.eMarket</groupId>
            <artifactId>eSalesTestUtil</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>        

        <!-- we specifically created this in the DAO to hold reusable
             test artifacts -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>eSalesDAO</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
         <!--tell the resource plugin to perform filtering on resources 
             to fill in JDBC URL, etc. -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*-ant.xml</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*-ant.xml</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${surefire.argLine}</argLine>
                    <systemPropertyVariables>
                        <jdbc.driver>${jdbc.driver}</jdbc.driver>
                        <jdbc.url>${jdbc.url}</jdbc.url>
                        <jdbc.user>${jdbc.user}</jdbc.user>
                        <jdbc.password>${jdbc.password}</jdbc.password>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- create a classpath for our JSE clients to run -->
            <!-- used only for the Ant script -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-jars</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>test</includeScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-ddl</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>eSalesDAO</artifactId>
                                    <version>${project.version}</version>
                                    <includes>ddl/*</includes>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>      
        </plugins>
    </build>

</project>
